# 从https://hub.docker.com/_/node/获取NodeJS镜像
# image: node:4.6.0

# cache:
#   paths:
#   - node_modules/

before_script:
# - sudo apt-get install expect # use root user to install it before

# add id_rsa private key for aliyun login
- cd ~/.ssh
#- rm -rf aliyun_id_rsa
#- rm -rf aliyun_id_rsa.pub
#- echo $ALIYUN_SSH_PRIVATE_KEY >> aliyun_id_rsa
# - echo $ALIYUN_SSH_PUBLIC_KEY >> aliyun_id_rsa.pub
# new file will always request the passphrase for the key, so just copy id_rsa
- cp id_rsa aliyun_id_rsa
- chmod 600 ~/.ssh/aliyun_id_rsa
# - chmod 600 ~/.ssh/aliyun_id_rsa.pub

stages:
  - test
  - build
  - deploy

Test:
  stage: test  
  script:
  - cd /home/gitlab_ci_multi_runner/data
  - eval `ssh-agent -s`
  - ssh-add /home/gitlab_ci_multi_runner/.ssh/id_rsa
  # avoid to enter yes for update known_hosts
  - touch config
  - echo -e "StrictHostKeyChecking no\n#UserKnownHostsFile /dev/null" > config
  # try to connect to git.parser.cc
  - ssh -p 10022 git@git.parser.cc
  # try to clone yourself, the SSH_PRIVATE_KEY was added as deploy key to this repository, no need appoint it with ssh -i id_rsa
  - rm -rf Tint
  - git clone ssh://git@git.parser.cc:10022/WebApproach/Tint.git


Build:
  stage: build
  script:  
  # delete not required files
  - cd /home/gitlab_ci_multi_runner/data/Tint
  - rm -rf .git
  - rm -rf src
  - rm -rf .editorconfig
  - rm -rf .eslintignore
  - rm -rf .eslintrc
  - rm -rf .gitignore
  - rm -rf gulpfile.js
  - rm -rf LICENSE
  - rm -rf package.json
  - rm -rf README.md
  - rm -rf webpacl.config.js
  # package files
  - cd ..
  - tar zcvf Tint.tar.gz Tint



Deploy:
  stage: deploy
  script:
  - cd /home/gitlab_ci_multi_runner/data
  - eval `ssh-agent -s`
  - ssh-add /home/gitlab_ci_multi_runner/.ssh/aliyun_id_rsa
  # before this, must log in with root account and exec cmd: echo "gitlab_ci_multi_runner ALL=NOPASSWD: ALL" > /etc/sudoers.d/gitlab_ci_multi_runner
  # - sudo su
  # add expect script file
  - rm -rf expect.exp
  - touch expect.exp
  - echo -e $EXPECT_CMD_CONTENT > expect.exp

  # use -d arg for debug
  - expect -f expect.exp -d
